#include <stdio.h> 
#include <stdlib.h> 
 
#define MAX_BLOCKS 100 
#define MAX_PROCESSES 100 
 
int blockSize[MAX_BLOCKS], processSize[MAX_PROCESSES], 
allocation[MAX_PROCESSES]; 
 
void firstFit(int m, int n) { 
    for (int i = 0; i < n; i++) { 
        allocation[i] = -1; 
        for (int j = 0; j < m; j++) { 
            if (blockSize[j] >= processSize[i]) { 
                allocation[i] = j; 
                blockSize[j] -= processSize[i]; 
                break; 
            } 
        } 
    } 
} 
 
void printAllocation(int n) { 
    printf("Process No.\tProcess Size\tBlock No.\n"); 
    for (int i = 0; i < n; i++) { 
        printf("%d\t\t%d\t\t", i + 1, processSize[i]); 
        if (allocation[i] != -1) { 
            printf("%d\n", allocation[i] + 1); 
        } else { 
            printf("Not Allocated\n"); 
        } 
    } 
} 
 
int main() { 
    int m, n; 
    printf("Enter number of blocks: "); 
    scanf("%d", &m); 
    printf("Enter number of processes: "); 
    scanf("%d", &n); 
 
    printf("Enter size of blocks:\n"); 
    for (int i = 0; i < m; i++) { 
        scanf("%d", &blockSize[i]); 
    } 
 
    printf("Enter size of processes:\n"); 
    for (int i = 0; i < n; i++) { 
        scanf("%d", &processSize[i]); 
    } 
 
    firstFit(m, n); 
    printAllocation(n); 
 
    return 0; 
} 
